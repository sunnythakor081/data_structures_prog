#include <stdio.h>
#include <stdlib.h>

struct node {
  int data;
  struct node *next;
};

void insert(struct node **head, int element) {
  struct node *newNode = (struct node *)malloc(sizeof(struct node));
  struct node *temp;
  newNode->data = element;
  if (*head == NULL) {
    newNode->next = newNode;
    *head = newNode;
  } else {
    temp = *head;

    if (temp->data > element) {
      newNode->next = *head;
      while (temp->next != *head) {
        temp = temp->next;
      }
      *head = newNode;
      temp->next = *head;
    } else {
      while (temp->next != *head && temp->next->data < element) {
        temp = temp->next;
      }
      if (temp->next == *head) {
        newNode->next = *head;
        temp->next = newNode;
      } else {
        newNode->next = temp->next;
        temp->next = newNode;
      }
    }
  }
}

void delete (struct node **head, int element) {
  struct node *temp = *head, *curr = *head;
  if (*head == NULL) {
    printf("List is empty\n");
  } else {
    if (temp->data == element) {
      while (temp->next != *head) {
        temp = temp->next;
      }
      temp->next = (*head)->next;

      if (*head == (*head)->next) {
        *head = NULL;
      }else{
           *head = (*head)->next;
      }
      free(curr);
    } else {
      while (temp->next != *head && temp->next->data != element) {
        temp = temp->next;
      }

      if (temp->next->data == element) {
        curr = temp->next;
        temp->next = temp->next->next;
        free(curr);
      } else {
        printf("Element not found\n");
      }
    }
  }
}

void modify(struct node **head, int oldData, int newData) {
  struct node *temp = *head;
  if (*head == NULL) {
    printf("List is empty\n");
  } else {
    while (temp->next != *head && temp->data != oldData){
      temp = temp->next;
    }
    
    if(temp->data == oldData){
      insert( &(*head), newData);
      delete(&(*head), oldData);
    }else{
      printf("Element is not found\n");
    }
  }
}

void display(struct node *head) {
  struct node *temp = head;
  if (temp == NULL) {
    printf("List is empty\n");
  } else {
    do {
      printf("%d  -->  ", temp->data);
      temp = temp->next;
    } while (temp != head);
  }
}

void main() {
  struct node *head = NULL;
  int element, choice, oldData, newData;

  while (1) {
    printf("\n1 For Insert \n");
    printf("2 For Delete \n");
    printf("3 For Modify \n");
    printf("4 For Display \n");
    printf("Enter Your Choice : ");
    scanf("%d", &choice);

    switch (choice) {
    case 1:
      printf("Enter the element to insert :");
      scanf("%d", &element);
      insert(&head, element);
      break;

    case 2:
      printf("Enter the element to delete :");
      scanf("%d", &element);
      delete (&head, element);
      break;

    case 3:
      printf("Enter old data to modify: ");
      scanf("%d", &oldData);
      printf("Enter new data: ");
      scanf("%d", &newData);
      modify(&head, oldData, newData);
      break;

    case 4:
      display(head);
      break;
    }
  }
}
