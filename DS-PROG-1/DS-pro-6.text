#include<stdio.h>
#include<stdlib.h>
#define max 5

void insert(int que[],int *r,int *f)
{
 int ele;
 if(*r==max-1)
   printf("\nQueue is full");
 else
 {
  printf("\nEnter New Element");
  scanf("%d",&ele);
  *r+=1;
  que[*r]=ele;
  if(*r==0)
  *f=0;
 }
}
void  del(int que[],int *r,int *f)
{
  if(*f==-1)
  printf("\nQueue if Empty");
  else
 {
  printf("\nRemove : %d",que[*f]);
    if(*f==*r)
    {
     *f=-1;*r=-1 ;
    }
    else
    {
    *f+=1;
    }
 }
}
int simple_Search(int arr[],int f,int r,int ele)
{
   int i,j=-1;
   for(i=f;i<=r;i++)
   {
    if(arr[i]==ele)
      { j=i;
	break;
      }
   }
   if(i==r+1)
      j=-1;
   return j;
}
void modify(int arr[],int f,int r)
{
  int index,nex,pe;
   printf("\nEnter Previous and New element both,previous           element replce to new element\n");
   scanf("%d%d",&pe,&nex);
   index=simple_Search(arr,f,r,pe);
   if(index!=-1)
     arr[index]=nex;
   else
     printf("\nElement is not present in array");

}

void display(int que[],int *r,int *f)
{
  int i=0;
  printf("\n");
  if(*f==-1)
   printf("\nQueue is empty");
  else
  {
    for(i=*f;i<=*r;i++)
   {
    printf(" %d ",que[i]);
   }
  }
}
void main()
{
 int que[max],r1=-1,f1=-1,*f=&f1,*r=&r1;
 int choice;
   printf("\n1.insert");
  printf("\n2.delete");
  printf("\n3.modify");
  printf("\n4.dipslay");
  printf("\n5.end");
 while(1)
 {
  printf("\nEnter your choice :");
  scanf("%d",&choice);
  switch(choice)
  {
    case 1:
    insert(que,r,f);
	break;
	
    case 2:
    del(que,r,f);
	break;
	
	case 3:
	modify(que,*f,*r);
	break;
	
    case 4:
    display(que,r,f);
	break;
	
    case 5:
    exit(0);
    
    default:
    printf("\nPlease,enter valid choice");
  }
 }

}
